#server:
#  port: 8080
#
#file:
#  path: D:\document\IDEAdocument\locallearndemo\springlearning\src\main\resources\file\
#
#spring:
#  # 配置数据源
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:3309/springlearning?useUnicode=true&characterEncoding=utf-8
#    username: root
#    password: root
#    type: com.alibaba.druid.pool.DruidDataSource
## mybatis-plus相关配置
#mybatis-plus:
#  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）
#  mapper-locations: classpath:mapper/*.xml
#  # 以下配置均有默认值,可以不设置
#  global-config:
#    db-config:
#      #主键类型 AUTO:"数据库ID自增" INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
#      id-type: auto
#      #字段策略 IGNORED:"忽略判断"  NOT_NULL:"非 NULL 判断")  NOT_EMPTY:"非空判断"
#      field-strategy: NOT_EMPTY
#      #数据库类型
#      db-type: MYSQL
#  configuration:
#    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
#    map-underscore-to-camel-case: true
#    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
#    call-setters-on-nulls: true
#    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

#mybatis:
#  table:
#    auto: update
#    #create	系统启动后，会将所有的表删除掉，然后根据model中配置的结构重新建表，该操作会破坏原有数据。
#    #update	系统会自动判断哪些表是新建的，哪些字段要修改类型等，哪些字段要删除，哪些字段要新增，该操作不会破坏原有数据。
#    #none 		系统不做任何处理。
#    #add		新增表/新增字段/新增索引/新增唯一约束的功能，不做做修改和删除 (只在版本1.0.9.RELEASE及以上支持)。
#  model:
#    pack: com.yuru.entity #扫描用于创建表的对象的包名，多个包用“,”隔开
#  database:
#    type: mysql #数据库类型 目前只支持mysql